version: '3'

services:

  zookeeper:
      hostname: "zookeeper"
      image: "confluent/zookeeper"
      ports:
        - "2181:2181"
  
  kafka:
    container_name: "kafka"
    hostname: "kafka"
    image: "wurstmeister/kafka"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_LOG_DIRS=/kafka/logdir
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTIZED_PORT=9092
      - KAFKA_CREATE_TOPICS="positions:4:1,matched-positions:4:1"
      - KAFKA_CREATE_TOPICS_SEPARATOR=","
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:4.1
    container_name: mongodb
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
    container_name: elasticsearch
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
        
  graylog:
    hostname: graylog
    image: graylog/graylog:3.2.3
    container_name: graylog
    links:
      - mongodb:mongo
      - elasticsearch
    env_file: 
      - .env
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      # HTTP
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp

  consul-agent:
    build: ./infra/consul/
    command: "-retry-join consul-server-bootstrap -client 0.0.0.0"
    depends_on:
    - consul-server-bootstrap

  consul-server-1: &consul-server
    image: consul:1.7.1
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"

  consul-server-2:
    <<: *consul-server

  consul-server-bootstrap:
    image: consul:1.7.1
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0"


  postgres:
    hostname: "postgres"
    image: postgres:12.2
    env_file:
      - .env
    volumes:
      - ./postgresData:/var/lib/postgresql/data
      - ./storage/migrations/init:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432


  migrator:
    image: "migrate/migrate"
    restart: on-failure:10
    volumes: 
      - ./storage/migrations:/migrations
    env_file:
      - ".env"
    command: ["-path", "/migrations", "-database",  "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB?sslmode=disable", "up"]
    depends_on: 
      - postgres


  positioning-filter:
      hostname: "positioningfilter"
      restart: unless-stopped
      container_name: "positioning-filter"
      ports:
        - "8000:8000"
      build: "./"
      command: "./positioning-filter -cp ./config/"
      depends_on: 
      - postgres
      - migrator
      - kafka
      - graylog
      - consul-server-bootstrap